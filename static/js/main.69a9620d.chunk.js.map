{"version":3,"sources":["sketches/constants.js","sketches/welcome.js","sketches/spiral.js","sketches/triangles.js","sketches/circle.js","sketches/drag.js","sketches/forest.js","App.js","reportWebVitals.js","index.js"],"names":["BACKGROUND_COLOR","welcomeSketch","p","canvasWidth","canvasHeight","setup","createCanvas","background","textSize","textAlign","CENTER","fill","text","noLoop","myCustomRedrawAccordingToNewPropsHandler","props","spiralSketch","x","y","currentStep","currentAngle","frameRate","draw","forward","rotateRight","fromX","fromY","toX","Math","round","sin","PI","toY","cos","stroke","random","line","angle","trianglesSketch","degreesMode","initColorsRgb","noFill","angleMode","DEGREES","RADIANS","translate","rotate","point","triangle","console","log","circleSketch","first","sketchDrag","pointsBuffer","mouseDragged","mouseX","mouseY","push","length","shift","i","strokeWeight","forestSketch","theta","radians","drawPine","pop","horizontal_BigToSmall","horizontal_BigToSmall_Left","h","branch","branch2","App","sketches","dragSketch","setSpiral","bind","setTriangles","setCircle","setDrag","setForest","state","currentSketch","undefined","this","setCanvasSize","setState","size","min","window","innerWidth","innerHeight","canvasElement","document","getElementById","style","width","height","id","map","sketch","className","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69a9620d.chunk.js","sourcesContent":["export const BACKGROUND_COLOR = '#292929';","import { BACKGROUND_COLOR } from './constants';\r\n\r\nexport default function welcomeSketch(p) {\r\n\r\n    let canvasWidth = 0;\r\n    let canvasHeight = 0;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background(BACKGROUND_COLOR);\r\n        p.textSize(canvasWidth / 5);\r\n        p.textAlign(p.CENTER, p.CENTER);\r\n        p.fill('white');\r\n        p.text('^', canvasHeight / 2, canvasHeight / 2 - canvasHeight / 8);\r\n        p.text('Â¦', canvasHeight / 2, canvasHeight / 2);\r\n        p.noLoop();\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n    }\r\n}","import { BACKGROUND_COLOR } from './constants';\r\n\r\nexport default function spiralSketch(p) {\r\n    var canvasWidth = 0;\r\n    var canvasHeight = 0;\r\n\r\n    var x = 0;\r\n    var y = 0;\r\n    var stepStep = 3;\r\n    var currentStep = 3;\r\n    var angle = 70;\r\n    var currentAngle = 70;\r\n\r\n    p.setup = function() {\r\n        x = canvasWidth / 2;\r\n        y = canvasHeight / 2;\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background(BACKGROUND_COLOR);\r\n        p.frameRate(30);\r\n    };\r\n\r\n    p.draw = function() {\r\n        p.forward(currentStep);\r\n        p.rotateRight();\r\n\r\n        currentStep += stepStep;\r\n        if (currentStep > 500) {\r\n            p.noLoop();\r\n        }\r\n    };\r\n\r\n    p.forward = function() {\r\n        let fromX = x;\r\n        let fromY = y;\r\n        \r\n        let stepX = Math.round((currentStep * Math.sin(Math.PI * 2 * currentAngle / 360)));\r\n        let toX =  fromX + stepX;\r\n        let stepY = Math.round((currentStep * Math.cos(Math.PI * 2 * currentAngle / 360)));\r\n        let toY =  fromY + stepY;\r\n\r\n        p.stroke(p.random(125,150), p.random(100), p.random(125,250));\r\n        p.line(fromX, fromY, toX, toY);\r\n\r\n        x = toX;\r\n        y = toY;\r\n    };\r\n\r\n    p.rotateRight = function() {\r\n        currentAngle += angle % 360;\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","import { BACKGROUND_COLOR } from './constants';\r\n\r\nexport default function trianglesSketch(p) {\r\n    var angle = 0;\r\n    var degreesMode = true;\r\n    var canvasWidth = 0;\r\n    var canvasHeight = 0;\r\n    var initColorsRgb = [41, 0, 41];\r\n    var first = true;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background(BACKGROUND_COLOR);\r\n        p.frameRate(60);\r\n        p.noFill();\r\n        p.angleMode(p.DEGREES);\r\n    }\r\n\r\n    p.draw = function() {\r\n        if (degreesMode) {\r\n            p.angleMode(p.DEGREES);\r\n            p.stroke(initColorsRgb[0], initColorsRgb[1], initColorsRgb[2]);\r\n            \r\n        } else {\r\n            p.angleMode(p.RADIANS);\r\n            p.stroke(BACKGROUND_COLOR);\r\n        }\r\n        p.translate(canvasWidth / 2, canvasHeight / 2);\r\n        p.rotate(angle);\r\n\r\n        var point = 130;\r\n        p.triangle(-point, point, 0, -point, point, point);\r\n\r\n        if (initColorsRgb[0] < 250 || initColorsRgb[1] < 250) {\r\n            initColorsRgb = [initColorsRgb[0] + 2, initColorsRgb[1] + 2.15, initColorsRgb[2] + 0.15];\r\n        }\r\n        angle += 1 % 360;\r\n        if (angle > 360) {\r\n            first = false;\r\n            console.log(initColorsRgb)\r\n            angle = 0;\r\n            degreesMode = !degreesMode;\r\n            initColorsRgb = [250, 250, 60];\r\n        }\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","import { BACKGROUND_COLOR } from './constants';\r\n\r\nexport default function circleSketch(p) {\r\n    let angle = 0;\r\n    let degreesMode = true;\r\n    let canvasWidth = 400;\r\n    let canvasHeight = 400;\r\n    var initColorsRgb = [41, 41, 0];\r\n    var first = true;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background(BACKGROUND_COLOR);\r\n        p.frameRate(60);\r\n        p.noFill();\r\n        p.angleMode(p.DEGREES);\r\n    }\r\n\r\n    p.draw = function() {\r\n        if (degreesMode) {\r\n            p.angleMode(p.DEGREES);\r\n            p.stroke(initColorsRgb[0], initColorsRgb[1], initColorsRgb[2]);\r\n        } else {\r\n            p.angleMode(p.RADIANS);\r\n            p.stroke(BACKGROUND_COLOR);\r\n        }\r\n        p.translate(canvasWidth / 2, canvasHeight / 2);\r\n        p.rotate(angle);\r\n\r\n        var point = 130;\r\n        p.triangle(-point, point, 0, 0, point, point);\r\n\r\n        if (first && (initColorsRgb[0] < 250 || initColorsRgb[1] < 250)) {\r\n            initColorsRgb = [initColorsRgb[0] + 1.5, initColorsRgb[1], initColorsRgb[2] + 0.20];\r\n        }\r\n        angle += 1 % 360;\r\n        if (angle > 360) {\r\n            first = false;\r\n            angle = 0;\r\n            degreesMode = !degreesMode;\r\n            initColorsRgb = [250, 41, 40];\r\n        }\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","import { BACKGROUND_COLOR } from './constants';\r\n\r\nexport default function sketchDrag (p) {\r\n    var pointsBuffer = [];\r\n    let canvasWidth = 400;\r\n    let canvasHeight = 400;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background(BACKGROUND_COLOR);\r\n        p.frameRate(30);\r\n        p.noLoop();\r\n    };\r\n\r\n    p.draw = function() {\r\n        p.textSize(canvasWidth / 10);\r\n        p.textAlign(p.CENTER, p.CENTER);\r\n        p.fill('white');\r\n        p.text('drag to draw', canvasHeight / 2, canvasHeight / 2);\r\n        p.noLoop();\r\n    }\r\n    \r\n    p.mouseDragged = function() {\r\n        p.background(BACKGROUND_COLOR);\r\n\r\n        p.stroke('#fff');\r\n        p.point(p.mouseX, p.mouseY);\r\n\r\n        pointsBuffer.push([p.mouseX, p.mouseY]);\r\n        if (pointsBuffer.length > 300) {\r\n            pointsBuffer.shift();\r\n        }\r\n\r\n        for (let i = 0; i < pointsBuffer.length; i++) {\r\n            pointsBuffer[i][0] += 1;\r\n            p.strokeWeight(p.random(1,10));\r\n            p.stroke(1*i, 1*i, 1*i);\r\n            p.point(pointsBuffer[i][0], pointsBuffer[i][1]);\r\n        }\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","import { BACKGROUND_COLOR } from './constants';\r\n\r\nexport default function forestSketch(p) {\r\n    var canvas;\r\n    var canvasWidth = 0;\r\n    var canvasHeight = 0;\r\n    let a = 70;\r\n    var theta = p.radians(a);\r\n    var sizeChange = 0.76;\r\n\r\n    p.setup = function() {\r\n        canvas = p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background(BACKGROUND_COLOR);\r\n        p.frameRate(30);\r\n        p.noLoop();\r\n    };\r\n\r\n    p.draw = function() {\r\n        p.push();\r\n        p.translate(canvasWidth/2,canvasHeight*0.70);\r\n\r\n        p.stroke('rgb(45,45,45)')\r\n        p.drawPine(250);\r\n        \r\n        p.stroke('rgb(65,85,135)')\r\n        p.drawPine(120);\r\n        p.pop();\r\n\r\n        p.push();\r\n        p.stroke('#5F8A64')\r\n        p.translate(canvasWidth * 0.62, canvasHeight * 0.66); // (less is right, more is left; less is higher, more is lower)\r\n        p.horizontal_BigToSmall(180);\r\n        p.pop();\r\n\r\n        p.push();\r\n        p.stroke('#5F8A64')\r\n        p.translate(canvasWidth * 0.38, canvasHeight * 0.66); // (less is left, more is right; less is lower, more is higher)\r\n        p.horizontal_BigToSmall_Left(180);\r\n        p.pop();\r\n\r\n        // p.save(canvas, 'forest.jpg');\r\n\r\n        p.noLoop();\r\n    };\r\n\r\n    p.drawPine = function(h) {\r\n        p.branch(h);\r\n        p.branch2(h);\r\n    }\r\n\r\n    p.branch = function(h) {\r\n        h *= sizeChange;\r\n\r\n        if (h > 2) {\r\n            p.push();\r\n            // p.rotate(theta);\r\n            p.line(0, 0, 0, -h);  \r\n            p.translate(0, -h); \r\n            p.branch(h);       \r\n            p.pop(); \r\n\r\n            p.push();\r\n            p.rotate(-theta);\r\n            p.line(0, 0, 0, -h);\r\n            // p.translate(0, -h);\r\n            p.branch(h);\r\n            p.pop();\r\n        }\r\n    }\r\n\r\n    p.branch2 = function(h) {\r\n        h *= sizeChange;\r\n\r\n        if (h > 2) {\r\n            p.push();\r\n            p.rotate(theta);\r\n            p.line(0, 0, 0, -h);  \r\n            // p.translate(0, -h); \r\n            p.branch2(h);       \r\n            p.pop(); \r\n\r\n            p.push();\r\n            // p.rotate(theta);\r\n            p.line(0, 0, 0, -h);\r\n            p.translate(0, -h);\r\n            p.branch2(h);\r\n            p.pop();\r\n        }\r\n    }\r\n\r\n    p.horizontal_BigToSmall = function(h) {\r\n        h *= 0.66;\r\n\r\n        if (h > 2) {\r\n            p.push();\r\n            p.rotate(theta);\r\n            p.line(0, 0, 0, h);  \r\n            p.translate(0, h); \r\n            p.branch(h);       \r\n            p.pop(); \r\n\r\n            p.push();\r\n            // p.rotate(theta);\r\n            // p.line(0, 0, 0, h);\r\n            // p.translate(0, h);\r\n            // p.branch(h);\r\n            p.pop();\r\n        }\r\n    }\r\n\r\n    p.horizontal_BigToSmall_Left = function(h) {\r\n        h *= 0.66;\r\n\r\n        if (h > 2) {\r\n            p.push();\r\n            p.rotate(-theta);\r\n            p.line(0, 0, 0, h);  \r\n            p.translate(0, h); \r\n            p.branch2(h);       \r\n            p.pop(); \r\n\r\n            p.push();\r\n            // p.rotate(theta);\r\n            // p.line(0, 0, 0, h);\r\n            // p.translate(0, h);\r\n            // p.branch(h);\r\n            p.pop();\r\n        }\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport welcomeSketch from './sketches/welcome';\r\nimport spiralSketch from './sketches/spiral';\r\nimport trianglesSketch from './sketches/triangles';\r\nimport circleSketch from './sketches/circle';\r\nimport dragSketch from './sketches/drag';\r\nimport forestSketch from './sketches/forest';\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  canvasWidth = 0;\r\n  canvasHeight = 0;\r\n  sketches = [welcomeSketch, spiralSketch, trianglesSketch, circleSketch, dragSketch, forestSketch];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setSpiral = this.setSpiral.bind(this);\r\n    this.setTriangles = this.setTriangles.bind(this);\r\n    this.setCircle = this.setCircle.bind(this);\r\n    this.setDrag = this.setDrag.bind(this);\r\n    this.setForest = this.setForest.bind(this);\r\n    this.state = {currentSketch: undefined};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setCanvasSize();\r\n    this.setState({currentSketch: welcomeSketch});\r\n  }\r\n\r\n  setCanvasSize() {\r\n    let size = Math.min(window.innerWidth - 44, window.innerHeight - 110);\r\n    this.canvasWidth = this.canvasHeight = size;\r\n    let canvasElement = window.document.getElementById('canvas');\r\n    canvasElement.style.width = `${size}px`;\r\n    canvasElement.style.height = `${size}px`;\r\n  }\r\n \r\n  setSpiral() {\r\n    this.setState({currentSketch: spiralSketch});\r\n  }\r\n\r\n  setTriangles() {\r\n    this.setState({currentSketch: trianglesSketch});\r\n  }\r\n\r\n  setCircle() {\r\n    this.setState({currentSketch: circleSketch});\r\n  }\r\n\r\n  setDrag() {\r\n    this.setState({currentSketch: dragSketch});\r\n  }\r\n\r\n  setForest() {\r\n    this.setState({currentSketch: forestSketch});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"container\">\r\n          <div id=\"canvas\">\r\n            {\r\n              this.sketches.map((sketch, i) => (\r\n                this.state.currentSketch === sketch && \r\n                <P5Wrapper key={i} sketch={sketch} canvasWidth={this.canvasWidth} canvasHeight={this.canvasHeight}></P5Wrapper>\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"buttons-row\">\r\n          <button id=\"spiral\" onClick={this.setSpiral}>Spiral</button>\r\n          <button id=\"circle\" onClick={this.setCircle}>Circle</button>\r\n          <button id=\"triangles\" onClick={this.setTriangles}>Triangles</button>\r\n          <button id=\"drag\" onClick={this.setDrag}>Drag</button>\r\n          <button id=\"forest\" onClick={this.setForest}>Forest</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}