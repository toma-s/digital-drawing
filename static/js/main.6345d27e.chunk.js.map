{"version":3,"sources":["sketches/welcome.js","sketches/spiral.js","sketches/triangles.js","sketches/circle.js","sketches/drag.js","App.js","reportWebVitals.js","index.js"],"names":["welcomeSketch","p","canvasWidth","canvasHeight","setup","createCanvas","background","textSize","textAlign","CENTER","fill","text","myCustomRedrawAccordingToNewPropsHandler","props","spiralSketch","x","y","currentStep","currentAngle","frameRate","draw","forward","rotateRight","noLoop","fromX","fromY","toX","Math","round","sin","PI","toY","cos","stroke","random","line","angle","trianglesSketch","degreesMode","noFill","angleMode","DEGREES","RADIANS","translate","rotate","triangle","circleSketch","sketchDrag","pointsBuffer","mouseDragged","point","mouseX","mouseY","push","length","shift","i","strokeWeight","App","sketches","dragSketch","setSpiral","bind","setTriangles","setCircle","setDrag","state","currentSketch","undefined","this","setCanvasSize","setState","size","min","window","innerWidth","innerHeight","canvasElement","document","getElementById","style","width","height","id","onClick","map","sketch","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8OAAe,SAASA,EAAcC,GAElC,IAAIC,EAAc,EACdC,EAAe,EAEnBF,EAAEG,MAAQ,WACNH,EAAEI,aAAaH,EAAaC,GAC5BF,EAAEK,WAAW,WACbL,EAAEM,SAASL,EAAc,GACzBD,EAAEO,UAAUP,EAAEQ,OAAQR,EAAEQ,QACxBR,EAAES,KAAK,SACPT,EAAEU,KAAK,IAAKR,EAAe,EAAGA,EAAe,EAAIA,EAAe,GAChEF,EAAEU,KAAK,OAAKR,EAAe,EAAGA,EAAe,IAGjDF,EAAEW,yCAA2C,SAASC,GACxB,OAAtBA,EAAMX,cACNA,EAAcW,EAAMX,aAEG,OAAvBW,EAAMV,eACNA,EAAeU,EAAMV,cAEzBF,EAAEG,SCtBK,SAASU,EAAab,GACjC,IAAIC,EAAc,EACdC,EAAe,EAEfY,EAAI,EACJC,EAAI,EAEJC,EAAc,EAEdC,EAAe,GAEnBjB,EAAEG,MAAQ,WACNW,EAAIb,EAAc,EAClBc,EAAIb,EAAe,EACnBF,EAAEI,aAAaH,EAAaC,GAC5BF,EAAEK,WAAW,WACbL,EAAEkB,UAAU,KAGhBlB,EAAEmB,KAAO,WACLnB,EAAEoB,QAAQJ,GACVhB,EAAEqB,eAEFL,GAjBW,GAkBO,KACdhB,EAAEsB,UAIVtB,EAAEoB,QAAU,WACR,IAAIG,EAAQT,EACRU,EAAQT,EAGRU,EAAOF,EADCG,KAAKC,MAAOX,EAAcU,KAAKE,IAAc,EAAVF,KAAKG,GAASZ,EAAe,MAGxEa,EAAON,EADCE,KAAKC,MAAOX,EAAcU,KAAKK,IAAc,EAAVL,KAAKG,GAASZ,EAAe,MAG5EjB,EAAEgC,OAAOhC,EAAEiC,OAAO,IAAI,KAAMjC,EAAEiC,OAAO,KAAMjC,EAAEiC,OAAO,IAAI,MACxDjC,EAAEkC,KAAKX,EAAOC,EAAOC,EAAKK,GAE1BhB,EAAIW,EACJV,EAAIe,GAGR9B,EAAEqB,YAAc,WACZJ,GAAgBkB,IAGpBnC,EAAEW,yCAA2C,SAASC,GACxB,OAAtBA,EAAMX,cACNA,EAAcW,EAAMX,aAEG,OAAvBW,EAAMV,eACNA,EAAeU,EAAMV,cAEzBF,EAAEG,QACFH,EAAEmB,QCzDK,SAASiB,EAAgBpC,GACpC,IAAImC,EAAQ,EACRE,GAAc,EACdpC,EAAc,EACdC,EAAe,EAEnBF,EAAEG,MAAQ,WACNH,EAAEI,aAAaH,EAAaC,GAC5BF,EAAEK,WAAW,WACbL,EAAEkB,UAAU,IACZlB,EAAEsC,SACFtC,EAAEuC,UAAUvC,EAAEwC,UAGlBxC,EAAEmB,KAAO,WACDkB,GACArC,EAAEuC,UAAUvC,EAAEwC,SACdxC,EAAEgC,OAAOhC,EAAEiC,OAAO,IAAI,KAAMjC,EAAEiC,OAAO,IAAI,KAAMjC,EAAEiC,OAAO,MAExDjC,EAAEuC,UAAUvC,EAAEyC,SACdzC,EAAEgC,OAAO,YAEbhC,EAAE0C,UAAUzC,EAAc,EAAGC,EAAe,GAC5CF,EAAE2C,OAAOR,GAETnC,EAAE4C,UAAU,IAAK,IAAK,GAAI,IAAK,IAAK,MAEpCT,GAAS,GACG,MACRA,EAAQ,EACRE,GAAeA,IAIvBrC,EAAEW,yCAA2C,SAASC,GACxB,OAAtBA,EAAMX,cACNA,EAAcW,EAAMX,aAEG,OAAvBW,EAAMV,eACNA,EAAeU,EAAMV,cAEzBF,EAAEG,QACFH,EAAEmB,QC1CK,SAAS0B,EAAa7C,GACjC,IAAImC,EAAQ,EACRE,GAAc,EACdpC,EAAc,IACdC,EAAe,IAEnBF,EAAEG,MAAQ,WACNH,EAAEI,aAAaH,EAAaC,GAC5BF,EAAEK,WAAW,WACbL,EAAEkB,UAAU,IACZlB,EAAEsC,SACFtC,EAAEuC,UAAUvC,EAAEwC,UAGlBxC,EAAEmB,KAAO,WACDkB,GACArC,EAAEuC,UAAUvC,EAAEwC,SACdxC,EAAEgC,OAAOhC,EAAEiC,OAAO,IAAI,KAAMjC,EAAEiC,OAAO,IAAKjC,EAAEiC,OAAO,GAAI,QAEvDjC,EAAEuC,UAAUvC,EAAEyC,SACdzC,EAAEgC,OAAO,YAEbhC,EAAE0C,UAAUzC,EAAc,EAAGC,EAAe,GAC5CF,EAAE2C,OAAOR,GAETnC,EAAE4C,UAAU,IAAK,IAAK,EAAG,EAAG,IAAK,MAEjCT,GAAS,GACG,MACRA,EAAQ,EACRE,GAAeA,IAIvBrC,EAAEW,yCAA2C,SAASC,GACxB,OAAtBA,EAAMX,cACNA,EAAcW,EAAMX,aAEG,OAAvBW,EAAMV,eACNA,EAAeU,EAAMV,cAEzBF,EAAEG,QACFH,EAAEmB,QC1CK,SAAS2B,EAAY9C,GAChC,IAAI+C,EAAe,GACf9C,EAAc,IACdC,EAAe,IAEnBF,EAAEG,MAAQ,WACNH,EAAEI,aAAaH,EAAaC,GAC5BF,EAAEK,WAAW,WACbL,EAAEkB,UAAU,IACZlB,EAAEsB,UAGNtB,EAAEmB,KAAO,WACLnB,EAAEM,SAASL,EAAc,IACzBD,EAAEO,UAAUP,EAAEQ,OAAQR,EAAEQ,QACxBR,EAAES,KAAK,SACPT,EAAEU,KAAK,eAAgBR,EAAe,EAAGA,EAAe,IAG5DF,EAAEgD,aAAe,WACbhD,EAAEK,WAAW,WAEbL,EAAEgC,OAAO,QACThC,EAAEiD,MAAMjD,EAAEkD,OAAQlD,EAAEmD,QAEpBJ,EAAaK,KAAK,CAACpD,EAAEkD,OAAQlD,EAAEmD,SAC3BJ,EAAaM,OAAS,KACtBN,EAAaO,QAGjB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAaM,OAAQE,IACrCR,EAAaQ,GAAG,IAAM,EACtBvD,EAAEwD,aAAaxD,EAAEiC,OAAO,EAAE,KAC1BjC,EAAEgC,OAAO,EAAEuB,EAAG,EAAEA,EAAG,EAAEA,GACrBvD,EAAEiD,MAAMF,EAAaQ,GAAG,GAAIR,EAAaQ,GAAG,KAIpDvD,EAAEW,yCAA2C,SAASC,GACxB,OAAtBA,EAAMX,cACNA,EAAcW,EAAMX,aAEG,OAAvBW,EAAMV,eACNA,EAAeU,EAAMV,cAEzBF,EAAEG,QACFH,EAAEmB,Q,oBCgCKsC,G,wDA/Db,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IALRX,YAAc,EAIK,EAHnBC,aAAe,EAGI,EAFnBwD,SAAW,CAAC3D,EAAec,EAAcuB,EAAiBS,EAAcc,GAItE,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,QAAU,EAAKA,QAAQH,KAAb,gBACf,EAAKI,MAAQ,CAACC,mBAAeC,GANZ,E,gEAUjBC,KAAKC,gBACLD,KAAKE,SAAS,CAACJ,cAAenE,M,sCAI9B,IAAIwE,EAAO7C,KAAK8C,IAAIC,OAAOC,WAAa,GAAID,OAAOE,YAAc,KACjEP,KAAKnE,YAAcmE,KAAKlE,aAAeqE,EACvC,IAAIK,EAAgBH,OAAOI,SAASC,eAAe,UACnDF,EAAcG,MAAMC,MAApB,UAA+BT,EAA/B,MACAK,EAAcG,MAAME,OAApB,UAAgCV,EAAhC,Q,kCAIAH,KAAKE,SAAS,CAACJ,cAAerD,M,qCAI9BuD,KAAKE,SAAS,CAACJ,cAAe9B,M,kCAI9BgC,KAAKE,SAAS,CAACJ,cAAerB,M,gCAI9BuB,KAAKE,SAAS,CAACJ,cAAeP,M,+BAItB,IAAD,OACP,OACE,gCACE,sBAAKuB,GAAG,OAAR,UACE,wBAAQA,GAAG,SAASC,QAASf,KAAKR,UAAlC,oBACA,wBAAQsB,GAAG,YAAYC,QAASf,KAAKN,aAArC,uBACA,wBAAQoB,GAAG,SAASC,QAASf,KAAKL,UAAlC,oBACA,wBAAQmB,GAAG,OAAOC,QAASf,KAAKJ,QAAhC,qBAEF,qBAAKkB,GAAG,YAAR,SACE,qBAAKA,GAAG,SAAR,SAEId,KAAKV,SAAS0B,KAAI,SAACC,EAAQ9B,GAAT,OAChB,EAAKU,MAAMC,gBAAkBmB,GAC7B,cAAC,IAAD,CAAmBA,OAAQA,EAAQpF,YAAa,EAAKA,YAAaC,aAAc,EAAKA,cAArEqD,iB,GA3Dd+B,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BS,M","file":"static/js/main.6345d27e.chunk.js","sourcesContent":["export default function welcomeSketch(p) {\r\n\r\n    let canvasWidth = 0;\r\n    let canvasHeight = 0;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background('#292929');\r\n        p.textSize(canvasWidth / 5);\r\n        p.textAlign(p.CENTER, p.CENTER);\r\n        p.fill('white');\r\n        p.text('^', canvasHeight / 2, canvasHeight / 2 - canvasHeight / 8);\r\n        p.text('Â¦', canvasHeight / 2, canvasHeight / 2);\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n    }\r\n}","export default function spiralSketch(p) {\r\n    var canvasWidth = 0;\r\n    var canvasHeight = 0;\r\n\r\n    var x = 0;\r\n    var y = 0;\r\n    var stepStep = 3;\r\n    var currentStep = 3;\r\n    var angle = 70;\r\n    var currentAngle = 70;\r\n\r\n    p.setup = function() {\r\n        x = canvasWidth / 2;\r\n        y = canvasHeight / 2;\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background('#292929');\r\n        p.frameRate(30);\r\n    };\r\n\r\n    p.draw = function() {\r\n        p.forward(currentStep);\r\n        p.rotateRight();\r\n\r\n        currentStep += stepStep;\r\n        if (currentStep > 500) {\r\n            p.noLoop();\r\n        }\r\n    };\r\n\r\n    p.forward = function() {\r\n        let fromX = x;\r\n        let fromY = y;\r\n        \r\n        let stepX = Math.round((currentStep * Math.sin(Math.PI * 2 * currentAngle / 360)));\r\n        let toX =  fromX + stepX;\r\n        let stepY = Math.round((currentStep * Math.cos(Math.PI * 2 * currentAngle / 360)));\r\n        let toY =  fromY + stepY;\r\n\r\n        p.stroke(p.random(125,150), p.random(100), p.random(125,250));\r\n        p.line(fromX, fromY, toX, toY);\r\n\r\n        x = toX;\r\n        y = toY;\r\n    };\r\n\r\n    p.rotateRight = function() {\r\n        currentAngle += angle % 360;\r\n    };\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","export default function trianglesSketch(p) {\r\n    var angle = 0;\r\n    var degreesMode = true;\r\n    var canvasWidth = 0;\r\n    var canvasHeight = 0;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background('#292929');\r\n        p.frameRate(30);\r\n        p.noFill();\r\n        p.angleMode(p.DEGREES);\r\n    }\r\n\r\n    p.draw = function() {\r\n        if (degreesMode) {\r\n            p.angleMode(p.DEGREES);\r\n            p.stroke(p.random(200,230), p.random(200,250), p.random(0));\r\n        } else {\r\n            p.angleMode(p.RADIANS);\r\n            p.stroke('#292929');\r\n        }\r\n        p.translate(canvasWidth / 2, canvasHeight / 2);\r\n        p.rotate(angle);\r\n\r\n        p.triangle(-160, 160, 0, -160, 160, 160);\r\n\r\n        angle += 1 % 360;\r\n        if (angle > 360) {\r\n            angle = 0;\r\n            degreesMode = !degreesMode;\r\n        }\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","export default function circleSketch(p) {\r\n    let angle = 0;\r\n    let degreesMode = true;\r\n    let canvasWidth = 400;\r\n    let canvasHeight = 400;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background('#292929');\r\n        p.frameRate(30);\r\n        p.noFill();\r\n        p.angleMode(p.DEGREES);\r\n    }\r\n\r\n    p.draw = function() {\r\n        if (degreesMode) {\r\n            p.angleMode(p.DEGREES);\r\n            p.stroke(p.random(210,250), p.random(30), p.random(50, 100));\r\n        } else {\r\n            p.angleMode(p.RADIANS);\r\n            p.stroke('#292929');\r\n        }\r\n        p.translate(canvasWidth / 2, canvasHeight / 2);\r\n        p.rotate(angle);\r\n\r\n        p.triangle(-200, 200, 0, 0, 200, 200);\r\n\r\n        angle += 1 % 360;\r\n        if (angle > 360) {\r\n            angle = 0;\r\n            degreesMode = !degreesMode;\r\n        }\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","export default function sketchDrag (p) {\r\n    var pointsBuffer = [];\r\n    let canvasWidth = 400;\r\n    let canvasHeight = 400;\r\n\r\n    p.setup = function() {\r\n        p.createCanvas(canvasWidth, canvasHeight);\r\n        p.background('#292929');\r\n        p.frameRate(30);\r\n        p.noLoop();\r\n    };\r\n\r\n    p.draw = function() {\r\n        p.textSize(canvasWidth / 10);\r\n        p.textAlign(p.CENTER, p.CENTER);\r\n        p.fill('white');\r\n        p.text('drag to draw', canvasHeight / 2, canvasHeight / 2);\r\n    }\r\n    \r\n    p.mouseDragged = function() {\r\n        p.background('#292929');\r\n\r\n        p.stroke('#fff');\r\n        p.point(p.mouseX, p.mouseY);\r\n\r\n        pointsBuffer.push([p.mouseX, p.mouseY]);\r\n        if (pointsBuffer.length > 300) {\r\n            pointsBuffer.shift();\r\n        }\r\n\r\n        for (let i = 0; i < pointsBuffer.length; i++) {\r\n            pointsBuffer[i][0] += 1;\r\n            p.strokeWeight(p.random(1,10));\r\n            p.stroke(1*i, 1*i, 1*i);\r\n            p.point(pointsBuffer[i][0], pointsBuffer[i][1]);\r\n        }\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\r\n        if (props.canvasWidth !== null) {\r\n            canvasWidth = props.canvasWidth;\r\n        }\r\n        if (props.canvasHeight !== null) {\r\n            canvasHeight = props.canvasHeight;\r\n        }\r\n        p.setup();\r\n        p.draw();\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport welcomeSketch from './sketches/welcome';\r\nimport spiralSketch from './sketches/spiral';\r\nimport trianglesSketch from './sketches/triangles';\r\nimport circleSketch from './sketches/circle';\r\nimport dragSketch from './sketches/drag';\r\nimport P5Wrapper from 'react-p5-wrapper';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  canvasWidth = 0;\r\n  canvasHeight = 0;\r\n  sketches = [welcomeSketch, spiralSketch, trianglesSketch, circleSketch, dragSketch];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setSpiral = this.setSpiral.bind(this);\r\n    this.setTriangles = this.setTriangles.bind(this);\r\n    this.setCircle = this.setCircle.bind(this);\r\n    this.setDrag = this.setDrag.bind(this);\r\n    this.state = {currentSketch: undefined};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setCanvasSize();\r\n    this.setState({currentSketch: welcomeSketch});\r\n  }\r\n\r\n  setCanvasSize() {\r\n    let size = Math.min(window.innerWidth - 44, window.innerHeight - 110);\r\n    this.canvasWidth = this.canvasHeight = size;\r\n    let canvasElement = window.document.getElementById('canvas');\r\n    canvasElement.style.width = `${size}px`;\r\n    canvasElement.style.height = `${size}px`;\r\n  }\r\n \r\n  setSpiral() {\r\n    this.setState({currentSketch: spiralSketch});\r\n  }\r\n\r\n  setTriangles() {\r\n    this.setState({currentSketch: trianglesSketch});\r\n  }\r\n\r\n  setCircle() {\r\n    this.setState({currentSketch: circleSketch});\r\n  }\r\n\r\n  setDrag() {\r\n    this.setState({currentSketch: dragSketch});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"mode\">\r\n          <button id=\"spiral\" onClick={this.setSpiral}>Spiral</button>\r\n          <button id=\"triangles\" onClick={this.setTriangles}>Triangles</button>\r\n          <button id=\"circle\" onClick={this.setCircle}>Circle</button>\r\n          <button id=\"drag\" onClick={this.setDrag}>Drag</button>\r\n        </div>\r\n        <div id=\"container\">\r\n          <div id=\"canvas\">\r\n            {\r\n              this.sketches.map((sketch, i) => (\r\n                this.state.currentSketch === sketch && \r\n                <P5Wrapper key={i} sketch={sketch} canvasWidth={this.canvasWidth} canvasHeight={this.canvasHeight}></P5Wrapper>\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}